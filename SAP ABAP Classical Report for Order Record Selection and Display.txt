REPORT  ZRB6_CR8 LINE-COUNT 10(2).

TYPES : BEGIN OF LTY_DATA,
        ONUMBER TYPE ZONUMBER,
        ODATE TYPE ZDATEORDER,
        OPAYMENT TYPE ZOPAYMENT,
        OCURRENCY TYPE ZOCURRENCY,
        END OF LTY_DATA.

TYPES : BEGIN OF LTY_DATA1,
        OPAYMENT TYPE ZOPAYMENT,
        ODESCRIPTION TYPE DESC40,
        END OF LTY_DATA1.

TYPES : BEGIN OF LTY_DATA2,
        OCURRENCY TYPE ZOCURRENCY,
        ODESCRIPTION TYPE DESC40,
        END OF LTY_DATA2.


DATA : LV_DATE TYPE ZDATEORDER.
DATA : LV_PM TYPE ZOPAYMENT.
DATA : LV_CURRENCY TYPE ZOCURRENCY.
DATA : LT_DATA TYPE TABLE OF LTY_DATA.
DATA : LWA_DATA TYPE LTY_DATA.
DATA : LT_CURR TYPE TABLE OF TCURC.
DATA : LT_DATA1 TYPE TABLE OF LTY_DATA1.
DATA : LWA_DATA1 TYPE LTY_DATA1.
DATA : LT_DATA2 TYPE TABLE OF LTY_DATA2.
DATA : LWA_DATA2 TYPE LTY_DATA2.
DATA : LT_LINK TYPE TABLE OF TLINE.

SELECT-OPTIONS : S_DATE FOR LV_DATE NO-EXTENSION. " NO EXTENSIONS NE MUTLIPLE-OPTIONS INVISIBLE HOT
SELECT-OPTIONS : S_PM FOR LV_PM NO INTERVALS. "NO INTERVAL HIGH LA BOX INVISIBLE HOT
SELECT-OPTIONS : S_CURR FOR LV_CURRENCY NO INTERVALS MODIF ID CUR.

PARAMETERS : P_CHECK TYPE C AS CHECKBOX USER-COMMAND SELECT.

INITIALIZATION.
  S_DATE-SIGN = 'I'.
  S_DATE-OPTION = 'BT'.
  S_DATE-LOW = SY-DATUM - 100.
  S_DATE-HIGH = SY-DATUM .
  APPEND S_DATE.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR S_PM-LOW.
  LWA_DATA1-OPAYMENT = 'C'.
  LWA_DATA1-ODESCRIPTION = TEXT-008.
  APPEND LWA_DATA1 TO LT_DATA1.
  CLEAR : LWA_DATA1.

  LWA_DATA1-OPAYMENT = 'D'.
  LWA_DATA1-ODESCRIPTION = TEXT-009.
  APPEND LWA_DATA1 TO LT_DATA1.
  CLEAR : LWA_DATA1.

  LWA_DATA1-OPAYMENT = 'N'.
  LWA_DATA1-ODESCRIPTION = TEXT-010.
  APPEND LWA_DATA1 TO LT_DATA1.
  CLEAR : LWA_DATA1.

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
*     DDIC_STRUCTURE         = ' '
      RETFIELD               = 'OPAYMENT'
*     PVALKEY                = ' '
      DYNPPROG               = SY-REPID
      DYNPNR                 = SY-DYNNR
      DYNPROFIELD            = 'S_PM-LOW'
*     STEPL                  = 0
*     WINDOW_TITLE           =
*     VALUE                  = ' '
      VALUE_ORG              = 'S'
*     MULTIPLE_CHOICE        = ' '
*     DISPLAY                = ' '
*     CALLBACK_PROGRAM       = ' '
*     CALLBACK_FORM          = ' '
*     CALLBACK_METHOD        =
*     MARK_TAB               =
*    IMPORTING
*     USER_RESET             =
     TABLES
      VALUE_TAB              = LT_DATA1
*     FIELD_TAB              =
*     RETURN_TAB             =
*     DYNPFLD_MAPPING        =
      EXCEPTIONS
     PARAMETER_ERROR        = 1
     NO_VALUES_FOUND        = 2
     OTHERS                 = 3
            .
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR S_CURR-LOW.
  LWA_DATA2-OCURRENCY = 'INR'.
  LWA_DATA2-ODESCRIPTION = TEXT-011.
  APPEND LWA_DATA2 TO LT_DATA2.
  CLEAR : LWA_DATA2.

  LWA_DATA2-OCURRENCY = 'USD'.
  LWA_DATA2-ODESCRIPTION = TEXT-011.
  APPEND LWA_DATA2 TO LT_DATA2.
  CLEAR : LWA_DATA2.

CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
  EXPORTING
*   DDIC_STRUCTURE         = ' '
    RETFIELD               = 'OCURRENCY'
*   PVALKEY                = ' '
    DYNPPROG               = SY-REPID
    DYNPNR                 = SY-DYNNR
    DYNPROFIELD            = 'S_CURR-LOW'
*   STEPL                  = 0
*   WINDOW_TITLE           =
*   VALUE                  = ' '
    VALUE_ORG              = 'S'
*   MULTIPLE_CHOICE        = ' '
*   DISPLAY                = ' '
*   CALLBACK_PROGRAM       = ' '
*   CALLBACK_FORM          = ' '
*   CALLBACK_METHOD        =
*   MARK_TAB               =
* IMPORTING
*   USER_RESET             =
  TABLES
    VALUE_TAB              = LT_DATA2 .
*   FIELD_TAB              =
*   RETURN_TAB             =
*   DYNPFLD_MAPPING        =
*   EXCEPTIONS
*   PARAMETER_ERROR        = 1
*   NO_VALUES_FOUND        = 2
*   OTHERS                 = 3 .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.


*AT SELECTION-SCREEN.
*  IF S_PM-LOW IS NOT INITIAL.
*    IF S_PM-LOW <> 'C' AND S_PM-LOW <> 'D' AND S_PM-LOW <> 'N'.
*      MESSAGE E004(ZRB6_MR1).
*    ENDIF.
*  ENDIF.

  AT SELECTION-SCREEN ON S_PM.
  IF S_PM-LOW IS NOT INITIAL.
    IF S_PM-LOW <> 'C' AND S_PM-LOW <> 'D' AND S_PM-LOW <> 'N'.
      MESSAGE E004(ZRB6_MR1).
    ENDIF.
  ENDIF.

  AT SELECTION-SCREEN ON S_CURR.
  IF S_CURR-LOW IS NOT INITIAL.
    IF S_CURR-LOW <> 'INR' AND S_CURR-LOW <> 'USD' .
      MESSAGE E005(ZRB6_MR1).
    ENDIF.
  ENDIF.

AT SELECTION-SCREEN OUTPUT.
  IF P_CHECK = ' ' .
    LOOP AT SCREEN.
      IF SCREEN-GROUP1 = 'CUR'.
        SCREEN-ACTIVE = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  IF P_CHECK = 'X' .
    LOOP AT SCREEN.
      IF SCREEN-GROUP1 = 'CUR'.
        SCREEN-ACTIVE = 1.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.


START-OF-SELECTION.
  SELECT  ONUMBER ODATE OPAYMENT OCURRENCY
    FROM ZBR6_ORDH
    INTO TABLE LT_DATA
    WHERE ODATE IN S_DATE
    AND OPAYMENT IN S_PM
    AND OCURRENCY IN S_CURR.


LOOP AT LT_DATA INTO LWA_DATA.
  WRITE : / LWA_DATA-ONUMBER UNDER TEXT-002 , LWA_DATA-ODATE UNDER TEXT-003 , LWA_DATA-OPAYMENT UNDER TEXT-004 , LWA_DATA-OCURRENCY UNDER TEXT-005.
ENDLOOP.


END-OF-SELECTION.
  WRITE : / TEXT-000.


TOP-OF-PAGE.
  WRITE : / TEXT-001 , SY-PAGNO.
  WRITE : /  TEXT-002 , 14 TEXT-003 ,26  TEXT-004 ,40 TEXT-005.

AT SELECTION-SCREEN ON HELP-REQUEST FOR P_CHECK.
  CALL FUNCTION 'HELP_OBJECT_SHOW'
    EXPORTING
      DOKCLASS                            =  'TX'
     DOKLANGU                            = SY-LANGU
      DOKNAME                             =
     DOKTITLE                            = ' '
     CALLED_BY_PROGRAM                   = ' '
     CALLED_BY_DYNP                      = ' '
     CALLED_FOR_TAB                      = ' '
     CALLED_FOR_FIELD                    = ' '
     CALLED_FOR_TAB_FLD_BTCH_INPUT       = ' '
     MSG_VAR_1                           = ' '
     MSG_VAR_2                           = ' '
     MSG_VAR_3                           = ' '
     MSG_VAR_4                           = ' '
     CALLED_BY_CUAPROG                   = ' '
     CALLED_BY_CUASTAT                   =
     SHORT_TEXT                          = ' '
     CLASSIC_SAPSCRIPT                   = ' '
    TABLES
      LINKS                               =  LT_LINK
   EXCEPTIONS
     OBJECT_NOT_FOUND                    = 1
     SAPSCRIPT_ERROR                     = 2
     OTHERS                              = 3
            .
  IF SY-SUBRC <> 0.
 Implement suitable error handling here
  ENDIF.